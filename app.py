from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import *
import os
import re

app = Flask(__name__)

LINE_CHANNEL_ACCESS_TOKEN = os.environ.get("LINE_CHANNEL_ACCESS_TOKEN")
LINE_CHANNEL_SECRET = os.environ.get("LINE_CHANNEL_SECRET")

if not LINE_CHANNEL_ACCESS_TOKEN or not LINE_CHANNEL_SECRET:
    raise ValueError("Missing LINE_CHANNEL_ACCESS_TOKEN or LINE_CHANNEL_SECRET")

line_bot_api = LineBotApi(LINE_CHANNEL_ACCESS_TOKEN)
handler = WebhookHandler(LINE_CHANNEL_SECRET)

# üß† ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤ (session ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏ï‡πà‡∏≠ user)
user_drug_selection = {}

@app.route('/')
def home():
    return 'LINE Bot is running!'

@app.route("/callback", methods=['POST'])
def callback():
    signature = request.headers['X-Line-Signature']
    body = request.get_data(as_text=True)

    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return 'OK'

# ‚úÖ Rich Message: ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤
def send_drug_selection(event):
    carousel = TemplateSendMessage(
        alt_text='‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì',
        template=CarouselTemplate(columns=[
            CarouselColumn(
                title='Paracetamol',
                text='10‚Äì15 mg/kg/dose',
                actions=[MessageAction(label='‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Paracetamol', text='‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤: Paracetamol')]
            ),
            CarouselColumn(
                title='Cetirizine',
                text='0.25 mg/kg/day',
                actions=[MessageAction(label='‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Cetirizine', text='‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤: Cetirizine')]
            )
        ])
    )
    line_bot_api.reply_message(event.reply_token, carousel)

@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    user_id = event.source.user_id
    text = event.message.text.strip()

    # ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≤"
    if text.lower() in ['‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≤', 'dose', '‡πÄ‡∏£‡∏¥‡πà‡∏°']:
        send_drug_selection(event)
        return

    # ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏¢‡∏≤‡πÉ‡∏´‡∏°‡πà
    if text == "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤‡πÉ‡∏´‡∏°‡πà":
        if user_id in user_drug_selection:
            del user_drug_selection[user_id]
        send_drug_selection(event)
        return

    # ‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤
    if text.startswith("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤:"):
        drug_name = text.replace("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤:", "").strip()
        user_drug_selection[user_id] = drug_name
        reply = f"‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å {drug_name} ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏° ‡πÄ‡∏ä‡πà‡∏ô 20"
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply))
        return

    # ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤‡πÑ‡∏ß‡πâ ‚Üí ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å
    if user_id in user_drug_selection:
        match = re.search(r"(\d+(\.\d+)?)", text)
        if match:
            weight = float(match.group(1))
            drug = user_drug_selection[user_id]

            # ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏ô‡∏≤‡∏î‡∏¢‡∏≤
            if drug == "Paracetamol":
                dose_min = weight * 10
                dose_max = weight * 15
                reply = (
                    f"{drug} ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: {dose_min:.2f} - {dose_max:.2f} mg ‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n\n"
                    f"‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤‡πÉ‡∏´‡∏°‡πà' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏¢‡∏≤"
                )
            elif drug == "Cetirizine":
                dose = weight * 0.25
                reply = (
                    f"{drug} ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: {dose:.2f} mg ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô\n\n"
                    f"‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤‡πÉ‡∏´‡∏°‡πà' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏¢‡∏≤"
                )
            else:
                reply = "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏¢‡∏≤‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö"

            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply))
        else:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÄ‡∏ä‡πà‡∏ô 20"))
        return

    # ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô
    line_bot_api.reply_message(event.reply_token, TextSendMessage(
        text="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ '‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≤' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏° ‡∏´‡∏£‡∏∑‡∏≠ '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏¢‡∏≤‡πÉ‡∏´‡∏°‡πà' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏¢‡∏≤"
    ))

# ‚úÖ ‡∏£‡∏±‡∏ô‡πÅ‡∏≠‡∏õ
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))  # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Render/Heroku
    app.run(host="0.0.0.0", port=port)
       
LINE_CHANNEL_ACCESS_TOKEN = 'f9aa6b49ac00dfb359098504cffe6eab'
LINE_CHANNEL_SECRET = 'kzXIG0cO1xDAPMJaQ0NrEiufMINBbst7Z5ndou3YkPp21dJKvr3ZHIL4eeePNM2q4JPFmy+ttnGunjBPaEZ3Vl1yG3gVR8sISp/DVpy7SibXB+xoed0JZd2MmbU9qnhKkf2Eu5teI7DiM/v0DMkV7AdB04t89/1O/w1cDnyilFU='